name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job uruchamiający testy jednostkowe z raportem o pokryciu
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          pytest --cov=src --cov-report=xml

      - name: Upload test coverage to Codecov (Optional)
        uses: codecov/codecov-action@v2
        with:
          file: coverage.xml

  # Job uruchamiający lintowanie z Pylint
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pylint
        run: |
          pylint src tests --output-format=text > pylint_report.txt
          cat pylint_report.txt

  # Job do generowania Issues z TODO w kodzie
  todo-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for TODO comments in code
        run: |
          grep -r "TODO" src/ tests/ || echo "No TODO found"

      - name: Create issue for TODO (if found)
        if: success() && steps.check-for-todo.outputs.todo_found == 'true'
        run: |
          gh issue create \
            --title "TODO Found in Code" \
            --body "There are TODO comments left in the code. Please address them." \
            --label "bug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Opcjonalny job do formatowania kodu z Black
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Format code with black
        run: |
          black src tests
