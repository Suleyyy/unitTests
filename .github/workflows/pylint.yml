name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          pytest --cov=your_project > coverage.txt
          cat coverage.txt

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.txt

  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pylint --rcfile=pylint.yml your_project

  todo-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate TODO issues
        uses: alstr/todo-to-issue-action@v1.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          labels: "TODO"
          assignees: "" # Optional: assign issues to a user or team

  optional-formatting:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Super-Linter for formatting
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_BLACK: true
        with:
          autofix: true
